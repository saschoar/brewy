import groovy.transform.Field

buildscript {
    ext.kotlin_version = "1.0.0"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-beta6'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://jitpack.io" }
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId 'com.saschahuth.brewy'
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName '1.0'

        buildConfigField "String", breweryDbApiKeyName, breweryDbApiKey
        buildConfigField "String", googleMapsApiKeyName, googleMapsApiKey
        resValue "string", breweryDbApiKeyResourceName, breweryDbApiKey
        resValue "string", googleMapsApiKeyResourceName, googleMapsApiKey

        //used for Glide blur transformation
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

@Field
String supportLibraryVersion = "23.2.0",
       kotlinVersion = "1.0.0"

dependencies {
    testCompile 'junit:junit:4.12'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // google
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile 'com.google.android.gms:play-services-maps:8.4.0'

    // dagger
    compile 'com.google.dagger:dagger:2.0.2'
    kapt 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // network
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    // image
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp-integration:1.4.0'

    // reactive
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'

    // ui
    compile 'com.sothree.slidinguppanel:library:3.2.1'
    compile 'com.r0adkll:slidableactivity:2.0.5'
    compile 'uk.co.chrisjenx:calligraphy:2.1.1-SNAPSHOT'

    // helper
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.grandstaish.paperparcel:paperparcel:1.0.0-beta1'
    kapt 'com.github.grandstaish.paperparcel:compiler:1.0.0-beta1'
}

@Field
String brewyPropertiesLocation = "brewy.properties",
       breweryDbApiKeyName = "BREWERY_DB_API_KEY",
       googleMapsApiKeyName = "GOOGLE_MAPS_API_KEY",
       breweryDbApiKeyResourceName = "breweryDbApiKey",
       googleMapsApiKeyResourceName = "googleMapsApiKey"

private checkBrewyProperties() {
    new File(brewyPropertiesLocation).exists()
}

private Properties loadBrewyProperties() {
    Properties props = new Properties()
    props.load(new FileInputStream(brewyPropertiesLocation))
    props
}

def getBreweryDbApiKey() {
    if (checkBrewyProperties()) {
        Properties props = loadBrewyProperties()
        return props[breweryDbApiKeyName]
    }
    "null"
}

def getGoogleMapsApiKey() {
    if (checkBrewyProperties()) {
        Properties props = loadBrewyProperties()
        return props[googleMapsApiKeyName]
    }
    "null"
}